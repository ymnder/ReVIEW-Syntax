
= Re:VIEWの書き方講座

//lead{
Re:VIEWは、書籍を楽しく簡単に制作するためのツールです。
シンプルな記法で書籍制作でよく使われるさまざまな表現ができ、複数の形式の出力にも対応しています。
本章ではRe:VIEWでリッチな表現を行うために頻出する各種記法を紹介します。
説明とコードサンプルで概要を掴んだあと、原稿と出力結果を比較してさらに理解を深めていきましょう。
//}

本章ではRe:VIEWで頻出する記法を紹介します。
本体の@<tt>{.re}と出力結果のpdfを比較するとより理解が深まります。

Re:VIEWの記法については、公式ドキュメント@<fn>{review_doc}により詳しい説明があります。
またTechBoosterの「技術書をかこう！ ～はじめてのRe:VIEW～@<fn>{techbooster}」には、Re:VIEWや技術書を書く上で必要な知見が紹介されています。
Re:VIEWチートシート@<fn>{cheat_sheet}も基本的な記法を一覧できるため便利です。

なお、本章の説明ではRe:VIEWの記法を使って書き方を紹介するために、命令記法など一部記号を全角記号にしていますのでご注意ください。

//footnote[review_doc][@<href>{https://github.com/kmuto/review/blob/master/doc/format.ja.md}]
//footnote[techbooster][@<href>{https://techbooster.booth.pm/items/178236}]
//footnote[cheat_sheet][@<href>{https://gist.github.com/erukiti/c4e3189dda179a0f0b73299fb5787838}]

== 章について
見出しである章・節・項・段は@<code>{=}により表現できます(@<list>{chapter})。

//list[chapter][章の記法]{
= 章
== 節
=== 項
==== 段
//}

章は１つの記事のレベルに相当しますので、実際に使用するのは節・項・段です。
記事にとりかかる前にアウトラインを用意し、全体の構成を整えてから書き始めるとスムーズです。

== 脚注について
脚注は極めて大事な要素です。
引用をしたり、参考文献を示したり、本筋から外れる説明を行う説明をしたりするのに使います。
自分で作成した画像・コード・文章でない場合は、くれぐれも忘れずに引用元を示してください。
挿入した脚注は、@<code>{＠<fn>{識別子｝}の形で参照できます（@<fn>{description}）。

//footnote[description][盗用や剽窃行為をしたと疑われないようにしましょう。論文の執筆方法を分かりやすく解説されている「戸田山和久（2012）『論文の教室』NHK出版」がお勧めです。]

脚注は次のような記法です（@<list>{code_footnote}）。

//list[code_footnote][脚注の記法]{
	//footnote[識別子][キャプション]
//}

キャプションの部分に@<code>{＠<href>{URL｝}を入れることで、pdfで読むユーザーにも優しい原稿になります。

== 文章について

今書いているこの文のように、各文は特別な記法なく書き進められます。
通常の改行は段落に影響しません。
gitを用いての校正作業を効率的に行うために一文ごとに改行を行うべきです。

段落を分けたい場合は空白行を追加してください。

== コメントについて

@<code>{#@#} と記述することで、コメントを書けます。
コメントは出力されませんのでTODOや校正作業などで大きく力を発揮します。

== コードの挿入

行中でコードを示すときは＠<code>{コード}の記法を使用します。
複数行に渡るコードを追加したい場合は@<code>{list}という記法を使えます(@<list>{code})。
挿入したコードは、@<code>{＠<list>{識別子｝}の形で参照できます。

//list[code][コードのインライン記法]{
	//list[識別子][キャプション][言語指定]{ 〜 //}
	listを参照したい場合は、＠<list>{識別子}と指定します
//}

複数行のコードは@<code>{list}を使っていきます。
コマンドラインの操作を示すときには@<code>{cmd}も有用です。
//cmd{
./build-in-docker.sh
//}

@<code>{cmd}は次のように書けます（@<list>{code_cmd}）。

//list[code_cmd][コマンドラインの記法]{
	//cmd{
	テキスト
	//}
//}


== 画像の挿入

@<code>{img}を使えば画像を挿入できます(@<img>{sample})。
挿入した画像は、@<code>{＠<img>{識別子｝}の形で参照できます。

//image[sample][サンプル画像][scale=0.8]{
//}

画像を@<code>{articles/images/articlename/}に配置した上で次の記法を挿入してください(@<list>{image_code})。@<tt>{articlename}は原稿のファイル名と同じにしてください。

//list[image_code][画像の挿入]{
	//image[識別子][キャプション][scale=0.3]{//}
//}

== 表の挿入

表は@<tt>{Tab}を使いますのでSoftTabsにはくれぐれも気をつけてください。
挿入した表は、@<code>{＠<table>{識別子｝}の形で参照できます（@<table>{sample_table}）。

//table[sample_table][サンプルの表]{
お茶	醗酵度
----------
紅茶	重醗酵
文山包種茶	軽醗酵
//}

コードはこんな感じです(@<list>{code_table})。

//list[code_table][表]{
	//table[識別子][キャプション]{
	ヘッダ1	ヘッダ2
	----------
	カラム1	カラム2
	//}
//}


== ＠<命令>記法について
@<code>{＠<命令>｛対象の内容｝}を使うことで文中の要素を装飾することができます。
命令は次のようなものを指定できます@<fn>{inline}。

: code
  インラインコードをハイライトするのに使う　例：@<code>{Activity}
: kw
  キーワードを説明するのに使う 例：@<kw>{信任状, credential}
: tt
  スクリーンショットの説明で必要な英単語などに使う　例：@<tt>{等幅}
: href
  リンク化する　例：@<href>{https://www.nikkei.com/}

//footnote[inline][@<href>{https://github.com/kmuto/review/blob/master/doc/format.ja.md#%E3%82%A4%E3%83%B3%E3%83%A9%E3%82%A4%E3%83%B3%E5%91%BD%E4%BB%A4}]

== 箇条書き
マークダウンと同じです。
@<code>{*}で箇条書き、インデックス付きは@<code>{1.}です。

 * 高山烏龍茶
 * 文山包種茶

 1. 急須と湯呑を温めます
 2. お茶の葉を急須に入れます
 3. お湯を注ぎます

== 用語リスト

箇条書きにしつつ用語説明をしたい場合は用語リストが使えます。
@<code>{:}を使うことで表現できます。

: アールグレイ
 ベルガモットなどで香りづけされた紅茶
: 茉莉花茶
 ジャスミンで香りをつけられたお茶

== リード文について

本章の最初で使われているのがリード文です（@<list>{code_lead}）。

//list[code_lead][リード文の書き方]{
	//lead{ 〜 //}
//}

章で扱う内容を簡潔に記述します。

== コラムについて

コラムはこのように書くことができます（@<list>{column}）。
//list[column][コラムの書き方]{

	====[column] コラムの書き方

	====[/column]

//}

====[column] コラムの書き方
このように表示されます。コラムは１ページを越えないようにしましょう。

====[/column]


== おわりに

本章でRe:VIEWでよく使う表記方法をひととおり紹介しました。
残すところは原稿を書くのみです。
記法の中で一番強力なのは、@<code>{＠<命令>｛識別子｝}です。
コードブロックや図表などを自分で採番せずに意味を持った識別子で参照を付与できるため、番号を間違えたり重複するミスが減ります。
煩わしい作業から解放され、原稿を書くのに集中できるでしょう。

それでは、素晴らしい原稿を書いていきましょう！！
